<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AvermediaHint" xml:space="preserve">
    <value>AVerMedia H264 Encoder 通過捕捉卡來記錄視頻無播放點擊.</value>
  </data>
  <data name="chkForceCfr" xml:space="preserve">
    <value>固定畫面播放速率</value>
  </data>
  <data name="chkOptimizeYT" xml:space="preserve">
    <value>YouTube 優化</value>
  </data>
  <data name="CustomQualityHint" xml:space="preserve">
    <value>[ ! ] 自定義質量配置僅適用於高級用戶. 請使用您自擔風險.</value>
  </data>
  <data name="lblCuePoints" xml:space="preserve">
    <value>突出顯示提示點的時刻</value>
  </data>
  <data name="lblMinutes" xml:space="preserve">
    <value>分鐘</value>
  </data>
  <data name="lblNever" xml:space="preserve">
    <value>永不</value>
  </data>
  <data name="lnkOptimizeYT" xml:space="preserve">
    <value>此選項優化編碼器設置根據 YouTube 的 &lt;a href="https://xspl.it/a0tpuy"&gt;建议&lt;/a&gt;.</value>
  </data>
  <data name="NVENCHint" xml:space="preserve">
    <value>NVIDIA Encoder (NVENC) 與GPU encoder記錄視頻帶來虛擬無播放點擊.</value>
  </data>
  <data name="pbCuePoints_Tooltip" xml:space="preserve">
    <value>您可以在錄製時插入提示點. 這些是用來幫助您識別關鍵時刻, 當編輯視頻在快速視頻編輯器可以找到的工具→快速編輯器. 添加提示點只是在設置中指定一個快捷鍵→快捷鍵選項卡. 插入提示點也適用於直播到輸出的"保存錄製" 功能.</value>
  </data>
  <data name="QSHint" xml:space="preserve">
    <value>Quick Sync 與iGPU encoder記錄視頻帶來虛擬無播放點擊.</value>
  </data>
  <data name="QualityHint" xml:space="preserve">
    <value>請注意高品質的錄製使用了更多的磁盤空間.</value>
  </data>
  <data name="VCEHint" xml:space="preserve">
    <value>視頻編解碼器引擎記錄視頻 (i) GPU 編碼器為幾乎沒有性能損失.</value>
  </data>
  <data name="x264Hint" xml:space="preserve">
    <value>{0} 記錄視頻與 CPU 可能造成性能損失在較高的質量.</value>
  </data>
  <data name="lblNFileType" xml:space="preserve">
    <value>檔案類型</value>
  </data>
  <data name="lblNSplitFilesAt" xml:space="preserve">
    <value>拆分檔到</value>
  </data>
  <data name="lblOutput" xml:space="preserve">
    <value>輸出</value>
  </data>
  <data name="Props" xml:space="preserve">
    <value>本地錄製屬性</value>
  </data>
  <data name="customQuality" xml:space="preserve">
    <value>自定義</value>
  </data>
  <data name="highQuality" xml:space="preserve">
    <value>高</value>
  </data>
  <data name="standardQuality" xml:space="preserve">
    <value>標準</value>
  </data>
  <data name="ultraHighQuality" xml:space="preserve">
    <value>極高</value>
  </data>
  <data name="veryHighQuality" xml:space="preserve">
    <value>超高</value>
  </data>
  <data name="lblRecordTarget" xml:space="preserve">
    <value>錄製目標</value>
  </data>
</root>